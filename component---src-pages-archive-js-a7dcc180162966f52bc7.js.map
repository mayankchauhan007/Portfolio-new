{"version":3,"file":"component---src-pages-archive-js-a7dcc180162966f52bc7.js","mappings":"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","sources":["webpack://v2/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport sr from '@utils/sr';\r\nimport { srConfig } from '@config';\r\nimport { Layout } from '@components';\r\nimport { FormattedIcon } from '@components/icons';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Main } from '@styles';\r\nconst { colors, fonts, fontSizes } = theme;\r\n\r\nconst StyledMainContainer = styled(Main)``;\r\nconst StyledTableContainer = styled.div`\r\n  margin: 100px -20px;\r\n  ${media.tablet`\r\n    margin: 100px -10px;\r\n  `};\r\n`;\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n\r\n  .hide-on-mobile {\r\n    ${media.tablet`\r\n      display: none;\r\n    `};\r\n  }\r\n\r\n  tbody tr {\r\n    transition: ${theme.transition};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: ${colors.lightNavy};\r\n    }\r\n  }\r\n  th,\r\n  td {\r\n    cursor: default;\r\n    line-height: 1.5;\r\n    padding: 10px 20px;\r\n    ${media.tablet`\r\n      padding: 10px;\r\n    `};\r\n  }\r\n  th {\r\n    text-align: left;\r\n  }\r\n  td {\r\n    &.year {\r\n      width: 10%;\r\n      ${media.tablet`\r\n        font-size: ${fontSizes.sm};\r\n      `};\r\n    }\r\n    &.title {\r\n      padding-top: 15px;\r\n      color: ${colors.lightestSlate};\r\n      font-size: ${fontSizes.xl};\r\n      font-weight: 700;\r\n    }\r\n    &.company {\r\n      width: 15%;\r\n      padding-top: 15px;\r\n      font-size: ${fontSizes.lg};\r\n    }\r\n    &.tech {\r\n      font-size: ${fontSizes.xs};\r\n      font-family: ${fonts.SFMono};\r\n      .separator {\r\n        margin: 0 5px;\r\n      }\r\n      span {\r\n        display: inline-block;\r\n      }\r\n    }\r\n    &.links {\r\n      span {\r\n        display: flex;\r\n        align-items: center;\r\n        a {\r\n          ${mixins.flexCenter};\r\n        }\r\n        a + a {\r\n          margin-left: 10px;\r\n        }\r\n        svg {\r\n          width: 20px;\r\n          height: 20px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ArchivePage = ({ location, data }) => {\r\n  const projects = data.allMarkdownRemark.edges;\r\n\r\n  const revealTitle = useRef(null);\r\n  const revealTable = useRef(null);\r\n  const revealProjects = useRef([]);\r\n  useEffect(() => {\r\n    sr.reveal(revealTitle.current, srConfig());\r\n    sr.reveal(revealTable.current, srConfig());\r\n    revealProjects.current.forEach((ref, i) => sr.reveal(ref, srConfig(i * 10)));\r\n  }, []);\r\n\r\n  return (\r\n    <Layout location={location}>\r\n      <Helmet>\r\n        <title>Archive | Chandrika Deb</title>\r\n        <link rel=\"canonical\" href=\"https://chandrikadeb7.github.io/archive\" />\r\n      </Helmet>\r\n\r\n      <StyledMainContainer>\r\n        <header ref={revealTitle}>\r\n          <h1 className=\"big-title\">Archive</h1>\r\n          <p className=\"subtitle\">A big list of things I’ve worked on</p>\r\n        </header>\r\n\r\n        <StyledTableContainer ref={revealTable}>\r\n          <StyledTable>\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>Title</th>\r\n                <th className=\"hide-on-mobile\">Made at</th>\r\n                <th className=\"hide-on-mobile\">Built with</th>\r\n                <th>Link</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.length > 0 &&\r\n                projects.map(({ node }, i) => {\r\n                  const { date, github, external, title, tech, company } = node.frontmatter;\r\n                  return (\r\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\r\n                      <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\r\n\r\n                      <td className=\"title\">{title}</td>\r\n\r\n                      <td className=\"company hide-on-mobile\">\r\n                        {company ? <span>{company}</span> : <span>—</span>}\r\n                      </td>\r\n\r\n                      <td className=\"tech hide-on-mobile\">\r\n                        {tech.length > 0 &&\r\n                          tech.map((item, i) => (\r\n                            <span key={i}>\r\n                              {item}\r\n                              {''}\r\n                              {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\r\n                            </span>\r\n                          ))}\r\n                      </td>\r\n\r\n                      <td className=\"links\">\r\n                        <span>\r\n                          {external && (\r\n                            <a\r\n                              href={external}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"External Link\">\r\n                              <FormattedIcon name=\"External\" />\r\n                            </a>\r\n                          )}\r\n                          {github && (\r\n                            <a\r\n                              href={github}\r\n                              target=\"_blank\"\r\n                              rel=\"nofollow noopener noreferrer\"\r\n                              aria-label=\"GitHub Link\">\r\n                              <FormattedIcon name=\"GitHub\" />\r\n                            </a>\r\n                          )}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTableContainer>\r\n      </StyledMainContainer>\r\n    </Layout>\r\n  );\r\n};\r\nArchivePage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ArchivePage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/projects/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            title\r\n            tech\r\n            github\r\n            external\r\n            company\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["colors","theme","fonts","fontSizes","StyledMainContainer","styled","Main","withConfig","displayName","componentId","StyledTableContainer","div","media","tablet","_templateObject","_taggedTemplateLiteralLoose","StyledTable","table","_templateObject2","transition","lightNavy","_templateObject3","_templateObject4","sm","lightestSlate","xl","lg","xs","SFMono","mixins","flexCenter","_ref","location","projects","data","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","useEffect","sr","reveal","current","srConfig","forEach","ref","i","React","Layout","Helmet","rel","href","className","length","map","_ref2","_node$frontmatter","node","frontmatter","date","github","external","title","tech","company","key","el","Date","getFullYear","item","target","FormattedIcon","name"],"sourceRoot":""}